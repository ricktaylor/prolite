#if defined(DECLARE_EXPR_1) && defined(DECLARE_EXPR_2)
//DECLARE_EXPR_1(neg,PACK_COMPOUND_EMBED_1(1,'-'))
/*DECLARE_EXPR_1(abs,PACK_COMPOUND_EMBED_3(1,'a','b','s'))
DECLARE_EXPR_1(sign,PACK_COMPOUND_EMBED_4(1,'s','i','g','n'))
DECLARE_EXPR_1(float_integer_part,PACK_COMPOUND_BUILTIN(float_integer_part,1))
DECLARE_EXPR_1(float_fractional_part,PACK_COMPOUND_BUILTIN(float_fractional_part,1))
DECLARE_EXPR_1(float,PACK_COMPOUND_EMBED_5(1,'f','l','o','a','t'))
DECLARE_EXPR_1(floor,PACK_COMPOUND_EMBED_5(1,'f','l','o','o','r'))
DECLARE_EXPR_1(truncate,PACK_COMPOUND_BUILTIN(truncate,1))
DECLARE_EXPR_1(round,PACK_COMPOUND_EMBED_5(1,'r','o','u','n','d'))
DECLARE_EXPR_1(ceiling,PACK_COMPOUND_BUILTIN(ceiling,1))
DECLARE_EXPR_1(sin,PACK_COMPOUND_EMBED_3(1,'s','i','n'))
DECLARE_EXPR_1(cos,PACK_COMPOUND_EMBED_3(1,'c','o','s'))
DECLARE_EXPR_1(atan,PACK_COMPOUND_EMBED_4(1,'a','t','a','n'))
DECLARE_EXPR_1(exp,PACK_COMPOUND_EMBED_3(1,'e','x','p'))
DECLARE_EXPR_1(log,PACK_COMPOUND_EMBED_3(1,'l','o','g'))
DECLARE_EXPR_1(sqrt,PACK_COMPOUND_EMBED_4(1,'s','q','r','t'))*/
DECLARE_EXPR_2(add,PACK_COMPOUND_EMBED_1(2,'+'))
DECLARE_EXPR_2(sub,PACK_COMPOUND_EMBED_1(2,'-'))
//DECLARE_EXPR_2(mul,PACK_COMPOUND_EMBED_1(2,'*'))
//DECLARE_EXPR_2(div,PACK_COMPOUND_EMBED_1(2,'/'))
//DECLARE_EXPR_2(int_div,PACK_COMPOUND_EMBED_2(2,'/','/'))
//DECLARE_EXPR_2(rem,PACK_COMPOUND_EMBED_3(2,'r','e','m'))
/*DECLARE_EXPR_2(mod,PACK_COMPOUND_EMBED_3(2,'m','o','d'))
DECLARE_EXPR_2(pow,PACK_COMPOUND_EMBED_2(2,'*','*'))
DECLARE_EXPR_2(bit_shift_r,PACK_COMPOUND_EMBED_2(2,'>','>'))
DECLARE_EXPR_2(bit_shift_l,PACK_COMPOUND_EMBED_2(2,'<','<'))
DECLARE_EXPR_2(bit_and,PACK_COMPOUND_EMBED_2(2,'/','\\'))
DECLARE_EXPR_2(bit_or,PACK_COMPOUND_EMBED_2(2,'\\','/'))
DECLARE_EXPR_1(bit_complement,PACK_COMPOUND_EMBED_1(1,'\\'))
DECLARE_EXPR_1(plus,PACK_COMPOUND_EMBED_1(1,'+'))
DECLARE_EXPR_2(max,PACK_COMPOUND_EMBED_3(2,'m','a','x'))
DECLARE_EXPR_2(min,PACK_COMPOUND_EMBED_3(2,'m','i','n'))
DECLARE_EXPR_2(int_pow,PACK_COMPOUND_EMBED_1(2,'^'))
DECLARE_EXPR_1(asin,PACK_COMPOUND_EMBED_4(1,'a','s','i','n'))
DECLARE_EXPR_1(acos,PACK_COMPOUND_EMBED_4(1,'a','c','o','s'))
DECLARE_EXPR_1(atan2,PACK_COMPOUND_EMBED_5(1,'a','t','a','n','2'))
DECLARE_EXPR_1(tan,PACK_COMPOUND_EMBED_3(1,'t','a','n'))
DECLARE_EXPR_2(bit_xor,PACK_COMPOUND_EMBED_3(2,'x','o','r'))*/
#endif

#if defined(DECLARE_EXPR_CONSTANT)
DECLARE_EXPR_CONSTANT(PACK_ATOM_EMBED_2('p','i'),M_PI)
#endif